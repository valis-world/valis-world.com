# /etc/nginx/sites-available/valis-world.com.conf
# Minimal Configuration for valis-world.com (HTTPS)

# Redirect HTTP to HTTPS (www)
server {
    listen 80;
    listen [::]:80;
    server_name valis-world.com www.valis-world.com;

    # Let's Encrypt ACME challenge handler (HTTP-01)
    location /.well-known/acme-challenge/ {
        # IMPORTANT: Verify this is the correct path Certbot uses for challenges.
        # Common alternatives: /var/www/certbot, or your site's root.
        root /var/www/html;
        allow all;
        try_files $uri =404;
    }

    # Redirect all other HTTP requests to HTTPS www
    location / {
        return 301 https://www.valis-world.com$request_uri;
    }
}

# Redirect non-WWW HTTPS to WWW HTTPS
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name valis-world.com;

    # SSL Certs (Managed by Certbot)
    ssl_certificate /etc/letsencrypt/live/valis-world.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/valis-world.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    # Add HSTS header (Recommended for security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Redirect to canonical WWW HTTPS
    return 301 https://www.valis-world.com$request_uri;
}

# Main HTTPS Server Block (www.valis-world.com)
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name www.valis-world.com;

    # Set the root directory for website files
    root /var/www/valis-world.com/html;
    index index.html index.htm;

    # SSL Certs (Managed by Certbot)
    ssl_certificate /etc/letsencrypt/live/valis-world.com/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/valis-world.com/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

    # Add HSTS header (Recommended for security)
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

    # Let's Encrypt ACME challenge handler (for HTTPS challenges during renewal if needed)
    location /.well-known/acme-challenge/ {
        # IMPORTANT: Verify this is the correct path Certbot uses for challenges.
        # Needs to match the path used in the HTTP block.
        root /var/www/html;
        allow all;
        try_files $uri =404;
    }

    # Serve website files
    location / {
        try_files $uri $uri/ =404;
    }

    # NOTE: Other configurations like custom logs, caching, security headers (beyond HSTS),
    # error pages, and the Uptime Kuma proxy have been removed as requested.
}
TimeLord@Tardis:~$